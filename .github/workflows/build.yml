name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Déclenche le workflow à chaque fois qu'un tag commençant par 'v' est poussé

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Create build script
      run: |
        @"
        import os
        import shutil
        import PyInstaller.__main__
        
        print(\"Nettoyage des anciens builds...\")
        for item in ['build', 'dist']:
            if os.path.exists(item):
                shutil.rmtree(item)
        
        print(\"\nConstruction de l'exécutable...\")
        PyInstaller.__main__.run([
            'main.py',
            '--name=SmartCalc',
            '--onefile',
            '--windowed',
            '--noconsole',
            '--add-data=assets;assets',
            '--add-data=currency_rates.json;.',
            '--hidden-import=PyQt6.QtCore',
            '--hidden-import=PyQt6.QtGui',
            '--hidden-import=PyQt6.QtWidgets',
            '--clean',
        ])
        "@ > build.py
        python build.py
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/SmartCalc.exe
        asset_name: SmartCalc_${{ github.ref_name }}.exe
        asset_content_type: application/octet-stream
