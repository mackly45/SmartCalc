name: Python application

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        echo "=== Installing System Dependencies ==="
        sudo apt-get update
        sudo apt-get install -y \
            python3-pip \
            python3-dev \
            xvfb \
            libxcb-xinerama0 \
            libxcb-cursor0 \
            libglx0 \
            libopengl0
    
    - name: Install PyQt6 and dependencies
      run: |
        echo "=== Installing PyQt6 ==="
        python -m pip install --upgrade pip
        pip install PyQt6 PyQt6-Qt6 PyQt6-sip
        pip install -r requirements.txt
    
    - name: Verify PyQt6 installation
      run: |
        echo "=== Verifying PyQt6 Installation ==="
        python -c "from PyQt6.QtCore import QT_VERSION_STR; print(f'PyQt6 Qt version: {QT_VERSION_STR}')"
    
    - name: Install package in development mode
      run: |
        echo "=== Installing package in development mode ==="
        pip install -e .
    
    - name: Run basic tests with offscreen plugin
      run: |
        echo "=== Running Basic Tests with Offscreen Plugin ==="
        python -c "import os; os.environ['QT_QPA_PLATFORM'] = 'offscreen'; os.environ['QT_DEBUG_PLUGINS'] = '1'; \
        from PyQt6.QtWidgets import QApplication; \
        import PyQt6.QtCore; \
        print('PyQt6 Qt version:', PyQt6.QtCore.QT_VERSION_STR); \
        print('Qt plugins path:', PyQt6.QtCore.QLibraryInfo.path(PyQt6.QtCore.QLibraryInfo.LibraryPath.PluginsPath)); \
        app = QApplication([]); \
        print('Success: PyQt6 QApplication created with offscreen plugin'); \
        from smartcalc.controllers.calculator_controller import CalculatorController; \
        from smartcalc.models.calculator_model import CalculatorModel; \
        from smartcalc.views.calculator_view import CalculatorView; \
        print('Success: All main components imported successfully'); \
        model = CalculatorModel(); \
        model.current_value = '5'; \
        model.add_operator('+'); \
        model.append_number('3'); \
        model.calculate(); \
        print(f'Test calculation: 5 + 3 = {model.current_value}'); \
        app.quit(); \
        print('All tests completed successfully')"
    
    - name: Run pytest with offscreen plugin
      run: |
        echo "=== Running pytest with offscreen plugin ==="
        export QT_QPA_PLATFORM=offscreen
        pip install pytest pytest-qt
        python -m pytest tests/ -v
