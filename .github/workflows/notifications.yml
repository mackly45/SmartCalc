name: Notifications

on:
  workflow_run:
    workflows: ["Python CI/CD"]
    types:
      - completed

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  notify-failure:
    if: github.event.workflow_run.conclusion == 'failure'
    runs-on: ubuntu-latest
    steps:
      - name: Add PR comment
        uses: actions/github-script@v6
        with:
          script: |
            try {
              const wr = context.payload.workflow_run;
              // Ne commenter que pour les événements PR et si une PR est associée
              if (wr.event !== 'pull_request' || !wr.pull_requests || wr.pull_requests.length === 0) {
                core.info('Aucune PR associée à cette exécution ou évènement non-PR. Aucun commentaire ajouté.');
                return;
              }

              const prRef = wr.pull_requests[0];
              const owner = context.repo.owner;
              const repo = context.repo.repo;

              // Récupérer les infos complètes de la PR pour obtenir l'auteur
              const prData = await github.rest.pulls.get({
                owner,
                repo,
                pull_number: prRef.number,
              });
              const authorLogin = prData?.data?.user?.login || null;

              const workflowName = wr.name || 'Workflow';
              const runUrl = wr.html_url;
              const headSha = wr.head_sha || context.sha;
              const shortSha = headSha ? headSha.substring(0, 7) : 'unknown';
              const commitUrl = `${context.serverUrl}/${owner}/${repo}/commit/${headSha}`;

              // Lien direct vers le résumé des checks de la PR
              const checksUrl = `${context.serverUrl}/${owner}/${repo}/pull/${prRef.number}/checks`;

              const mention = authorLogin ? `@${authorLogin}` : '';

              const body = [
                `${mention} ❌ **Échec du build**`,
                '',
                `Le workflow **${workflowName}** a échoué pour cette PR.`,
                '',
                '**Détails :**',
                `- Workflow : ${workflowName}`,
                `- Exécution : ${runUrl}`,
                `- Commit : [${shortSha}](${commitUrl})`,
                `- Résumé des checks : ${checksUrl}`,
                '',
                'Consultez les logs et le résumé des checks pour plus de détails.'
              ].join('\n');

              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: prRef.number,
                body,
              });
            } catch (error) {
              console.error('Erreur lors de la création du commentaire :', error);
            }
